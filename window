subroutine window(npts,istart,iend,window_type,win)
    use constants
    implicit none

    integer, intent(in) :: npts, istart,iend, window_type
    real(kind=CUSTOM_REAL), dimension(*), intent(out) :: win

    integer ::  i, nlen
    real(kind=CUSTOM_REAL) :: sfac1
    real(kind=CUSTOM_REAL), dimension(npts) :: fac

    nlen = iend - istart+1

    ! some constants
    sfac1 = (2./real(nlen))**2   ! for Welch taper

    ! initialization
    win(1:npts) = 0.d0
    fac(1:npts) = 0.d0

    do i = 1, nlen
    if(window_type ==2) then
        fac(i) = 1 - sfac1*((i-1) - real(nlen)/2.)**2
    elseif(window_type ==3) then
        fac(i) = 1. - cos(PI*(i-1)/(nlen-1))**ipwr_t
    elseif(window_type ==4) then
        fac(i) = 0.5 - 0.5*cos(TWOPI*(i-1)/(nlen-1))
    else
        fac(i) = 1. ! boxcar window
    endif
    enddo

    !! return 
    win(istart:iend)=fac(1:nlen)

end subroutine window
